name: Deploy

on: 
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build
        run: bun run build
        
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: github-pages
          path: build/

  deploy:
    needs: build

    permissions:
      contents: write
      pages: write     
      id-token: write   

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: github-pages
          path: build

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build

  scrape:
    name: Ask Typesense to scrape the new data
    needs: deploy

    env:
      TYPESENSE_API_KEY: ${{ secrets.TYPESENSE_API_KEY }}
      TYPESENSE_URL: 'https://typesense.fctapp.yudi.me'
      TYPESENSE_PORT: 443
      TYPESENSE_PROTOCOL: 'https'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run DocSearch Scraper
        shell: bash
        run: |
          docker run \
           -e TYPESENSE_API_KEY=${{ env.TYPESENSE_API_KEY }} \
           -e TYPESENSE_HOST="${{ env.TYPESENSE_URL }}" \
           -e TYPESENSE_PORT="${{ env.TYPESENSE_PORT }}" \
           -e TYPESENSE_PROTOCOL="${{ env.TYPESENSE_PROTOCOL }}" \
           -e CONFIG="$(cat typesense-config.json | jq -r tostring)" \
           typesense/docsearch-scraper
